name: Build, Test, and Publish

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Build with Gradle
        run: ./gradlew :lib:build

      - name: Upload build output
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: lib/build

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Run tests
        run: ./gradlew :lib:test :lib:jacocoTestReport

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            lib/build/reports/jacoco/test/jacocoTestReport.xml
            lib/build/reports/coverage/

  codecov:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download coverage reports
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: lib/build/reports

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: lib/build/reports/jacoco/test/jacocoTestReport.xml
          fail_ci_if_error: true

  coveralls:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Download coverage reports
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: lib/build/reports

      - name: Upload to Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: ./gradlew :lib:coverallsJacoco

  sonarqube:
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Download build output
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: lib/build

      - name: Run Sonar analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: ./gradlew :lib:build :lib:sonar --info

  publish:
    needs: [test, sonarqube, codecov, coveralls]
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Calculate version
        id: calculate_version
        run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          IFS='.' read -r major minor patch <<< "${latest_tag#v}"
          new_minor=$((minor + 1))
          new_version="v$major.$new_minor.0"
          echo "New version will be: $new_version"
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

      - name: Update version in build files
        run: |
          new_version=${{ steps.calculate_version.outputs.new_version }}
          gradle_version=${new_version#v}
          
          if [ -f "lib/build.gradle.kts" ]; then
            sed -i "s/version = \".*\"/version = \"$gradle_version\"/" lib/build.gradle.kts
          fi
          
          if [ -f "gradle.properties" ]; then
            sed -i "s/^version=.*/version=$gradle_version/" gradle.properties
          fi
          
          if [ -f "gradle/libs.versions.toml" ]; then
            sed -i "s/^version = \".*\"/version = \"$gradle_version\"/" gradle/libs.versions.toml
          fi

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: lib/build

      - name: Publish to GitHub Packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}
        run: ./gradlew :lib:publish

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.calculate_version.outputs.new_version }}
          release_name: Release ${{ steps.calculate_version.outputs.new_version }}
          draft: false
          prerelease: false
          body: |
            Automated release for version ${{ steps.calculate_version.outputs.new_version }}
            
            ### What's Changed
            * Automated release from master branch
            * For detailed changes, please check the [commit history](https://github.com/${{ github.repository }}/commits/master)